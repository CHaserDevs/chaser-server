name: Build and Release Qt Project

on:
  push:
    tags:
      - 'v*.*.*'  # バージョンタグがプッシュされたときにトリガー
  workflow_dispatch:  # 手動トリガーを追加

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Qt
        uses: jurplel/install-qt-action@v4.0.0
        with:
          version: '5.15'
          components: 'qtbase, qtdeclarative, qtmultimedia'

      - name: Install Qt Creator
        run: |
          sudo apt-get update
          sudo apt-get install -y qtcreator

      - name: Build project with Qt Creator
        run: |
          cd src
          mkdir build
          cd build
          qmake ../YourProject.pro
          make

      - name: Create zip
        run: |
          cd build
          zip -r ../release-linux.zip .  # Linux用のzip化

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Qt
        uses: jurplel/install-qt-action@v4.0.0
        with:
          version: '5.15'
          components: 'qtbase, qtdeclarative, qtmultimedia'

      - name: Install Qt Creator
        run: |
          choco install qtcreator  # Chocolateyを使用してQt Creatorをインストール

      - name: Build project with Qt Creator
        run: |
          cd src
          mkdir build
          cd build
          qmake ..\YourProject.pro  # Windows用のプロジェクトファイル名を指定
          mingw32-make  # Windows用のmakeコマンド

      - name: Create zip
        run: |
          cd build
          Compress-Archive -Path .\* -DestinationPath ..\release-windows.zip  # Windows用のzip化

  upload-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Upload Linux Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ github.ref }}
          files: release-linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ github.ref }}
          files: release-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
